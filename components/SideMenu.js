import React, { useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';

const SideMenu = () => {
  const [hoveredCategory, setHoveredCategory] = useState(null);

  const categories = [
    {
      id: 1,
      name: 'B√∫t vi·∫øt',
      icon: '‚úèÔ∏è',
      subCategories: [
        {
          name: 'B√∫t bi',
          items: ['B√∫t bi TL-027', 'B√∫t bi TL-079', 'B√∫t bi TL-095']
        },
        {
          name: 'B√∫t m√°y',
          items: ['B√∫t m√°y cao c·∫•p', 'B√∫t m√°y h·ªçc sinh']
        },
        {
          name: 'B√∫t ch√¨',
          items: ['B√∫t ch√¨ g·ªó', 'B√∫t ch√¨ b·∫•m', 'B√∫t ch√¨ m√†u']
        },
        {
          name: 'B√∫t d·∫° quang',
          items: ['B√∫t d·∫° quang FL-04', 'B√∫t d·∫° quang HL-012']
        }
      ]
    },
    {
      id: 2,
      name: 'VƒÉn ph√≤ng ph·∫©m',
      icon: 'üìé',
      subCategories: [
        {
          name: 'K·∫πp gi·∫•y',
          items: ['K·∫πp b∆∞·ªõm', 'K·∫πp ƒëen', 'K·∫πp m√†u']
        },
        {
          name: 'Ghim b·∫•m',
          items: ['Ghim s·ªë 10', 'Ghim s·ªë 3']
        },
        {
          name: 'BƒÉng keo',
          items: ['BƒÉng keo trong', 'BƒÉng keo 2 m·∫∑t']
        }
      ]
    },
    {
      id: 3,
      name: 'D·ª•ng c·ª• h·ªçc t·∫≠p',
      icon: 'üìè',
      subCategories: [
        {
          name: 'Th∆∞·ªõc k·∫ª',
          items: ['Th∆∞·ªõc 20cm', 'Th∆∞·ªõc 30cm', 'Th∆∞·ªõc ƒëo ƒë·ªô']
        },
        {
          name: 'Compa',
          items: ['Compa h·ªçc sinh', 'Compa k·ªπ thu·∫≠t']
        },
        {
          name: 'T·∫©y - G√¥m',
          items: ['T·∫©y tr·∫Øng', 'T·∫©y m√†u', 'T·∫©y b√∫t ch√¨']
        }
      ]
    },
    {
      id: 4,
      name: 'M·ªπ thu·∫≠t',
      icon: 'üé®',
      subCategories: [
        {
          name: 'M√†u v·∫Ω',
          items: ['M√†u n∆∞·ªõc', 'M√†u poster', 'M√†u acrylic']
        },
        {
          name: 'C·ªç v·∫Ω',
          items: ['C·ªç tr√≤n', 'C·ªç d·∫πt', 'B·ªô c·ªç']
        },
        {
          name: 'Gi·∫•y v·∫Ω',
          items: ['Gi·∫•y canson', 'Gi·∫•y m√†u n∆∞·ªõc']
        }
      ]
    },
    {
      id: 5,
      name: 'Gi·∫•y in',
      icon: 'üìÑ',
      subCategories: [
        {
          name: 'Gi·∫•y A4',
          items: ['Gi·∫•y A4 70gsm', 'Gi·∫•y A4 80gsm']
        },
        {
          name: 'Gi·∫•y photo',
          items: ['Gi·∫•y photo th∆∞·ªùng', 'Gi·∫•y photo ƒë·∫∑c bi·ªát']
        }
      ]
    },
    { 
      id: 6, 
      name: 'B√∫t cao c·∫•p',
      icon: 'üñãÔ∏è',
      subCategories: ['B√∫t k√Ω', 'B√∫t qu√† t·∫∑ng']
    },
    { 
      id: 7, 
      name: 'STEAM & DIY',
      icon: 'üî¨',
      subCategories: ['B·ªô th√≠ nghi·ªám', 'ƒê·ªì ch∆°i s√°ng t·∫°o']
    },
    { 
      id: 8, 
      name: 'S√°ch',
      icon: 'üìö',
      subCategories: ['S√°ch gi√°o khoa', 'S√°ch tham kh·∫£o']
    },
    { 
      id: 9, 
      name: 'Qu√† t·∫∑ng - Lifestyle',
      icon: 'üéÅ',
      subCategories: ['Qu√† t·∫∑ng vƒÉn ph√≤ng', 'Ph·ª• ki·ªán lifestyle']
    },
  ];

  const renderSubMenu = (category) => {
    if (hoveredCategory !== category.id) return null;

    return (
      <View style={styles.subMenuContainer}>
        {category.subCategories.map((subCat, index) => (
          <View key={index} style={styles.subCategoryContainer}>
            <Text style={styles.subCategoryTitle}>{subCat.name}</Text>
            {subCat.items.map((item, itemIndex) => (
              <TouchableOpacity key={itemIndex} style={styles.subMenuItem}>
                <Text style={styles.subMenuItemText}>{item}</Text>
              </TouchableOpacity>
            ))}
          </View>
        ))}
      </View>
    );
  };

  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <Text style={styles.headerText}>Danh m·ª•c s·∫£n ph·∫©m</Text>
      </View>
      <ScrollView style={styles.menuContainer}>
        {categories.map((category) => (
          <View key={category.id}>
            <TouchableOpacity
              style={[
                styles.categoryItem,
                hoveredCategory === category.id && styles.categoryItemHovered
              ]}
              onMouseEnter={() => setHoveredCategory(category.id)}
              onMouseLeave={() => setHoveredCategory(null)}
            >
              <View style={styles.categoryContent}>
                <Text style={styles.categoryIcon}>{category.icon}</Text>
                <Text style={styles.categoryName}>{category.name}</Text>
              </View>
              <Text style={styles.arrow}>‚Ä∫</Text>
            </TouchableOpacity>
            {renderSubMenu(category)}
          </View>
        ))}
      </ScrollView>

      {/* Ph·∫ßn Danh m·ª•c n·ªïi b·∫≠t */}
      <View style={styles.featuredCategories}>
        <Text style={styles.featuredTitle}>Danh m·ª•c n·ªïi b·∫≠t</Text>
        <TouchableOpacity style={styles.featuredItem}>
          <Text style={styles.featuredText}>Kh√°ch h√†ng th√¢n thi·∫øt</Text>
        </TouchableOpacity>
        <TouchableOpacity style={styles.featuredItem}>
          <Text style={styles.featuredText}>Kh√°ch h√†ng ∆∞u ti√™n</Text>
        </TouchableOpacity>
        <TouchableOpacity style={styles.featuredItem}>
          <Text style={styles.featuredText}>Thi√™n Long N·ªôi B·ªô</Text>
        </TouchableOpacity>
        <TouchableOpacity style={styles.featuredItem}>
          <Text style={styles.featuredText}>Gi√≥ H√†ng</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  header: {
    backgroundColor: '#0066cc',
    padding: 12,
  },
  headerText: {
    color: '#fff',
    fontWeight: 'bold',
    fontSize: 16,
  },
  menuContainer: {
    flex: 1,
  },
  categoryItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 12,
    borderBottomWidth: 1,
    borderBottomColor: '#eee',
    backgroundColor: '#fff',
  },
  categoryItemHovered: {
    backgroundColor: '#f0f8ff',
  },
  categoryContent: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  categoryIcon: {
    marginRight: 10,
    fontSize: 16,
  },
  categoryName: {
    fontSize: 14,
    color: '#333',
  },
  arrow: {
    fontSize: 18,
    color: '#666',
  },
  subMenuContainer: {
    position: 'absolute',
    left: '100%',
    top: 0,
    backgroundColor: '#fff',
    borderWidth: 1,
    borderColor: '#eee',
    borderRadius: 4,
    padding: 15,
    minWidth: 200,
    zIndex: 1000,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
    elevation: 5,
  },
  subCategoryContainer: {
    marginBottom: 15,
  },
  subCategoryTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 8,
  },
  subMenuItem: {
    paddingVertical: 6,
  },
  subMenuItemText: {
    fontSize: 13,
    color: '#666',
  },
  featuredCategories: {
    padding: 15,
    backgroundColor: '#f8f8f8',
    borderTopWidth: 1,
    borderTopColor: '#eee',
  },
  featuredTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    marginBottom: 10,
    color: '#333',
  },
  featuredItem: {
    paddingVertical: 8,
    borderBottomWidth: 1,
    borderBottomColor: '#eee',
  },
  featuredText: {
    fontSize: 14,
    color: '#666',
  },
});

export default SideMenu;